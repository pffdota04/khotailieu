[{"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\detail\\[id].js":"1","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\info\\index.js":"2","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\info\\[id].js":"3","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\pending\\index.js":"4","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\search.js":"5","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\type\\[type].js":"6","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\updatecache.js":"7","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\detail\\[id].jsx":"8","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\donate.jsx":"9","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\index.jsx":"10","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\login.jsx":"11","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\search.jsx":"12","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\share.jsx":"13","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\type\\[type].jsx":"14","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\_app.js":"15","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\components\\CardItem\\Card.jsx":"16","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\components\\Chip\\Chip.jsx":"17","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\components\\Header\\Header.jsx":"18","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\lib\\cors.js":"19","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\test.jsx":"20"},{"size":1040,"mtime":1654655166902,"results":"21","hashOfConfig":"22"},{"size":3796,"mtime":1654781721138,"results":"23","hashOfConfig":"22"},{"size":718,"mtime":1654780353559,"results":"24","hashOfConfig":"22"},{"size":944,"mtime":1654780481840,"results":"25","hashOfConfig":"22"},{"size":1758,"mtime":1654840520154,"results":"26","hashOfConfig":"22"},{"size":857,"mtime":1654588912173,"results":"27","hashOfConfig":"22"},{"size":666,"mtime":1654830259247,"results":"28","hashOfConfig":"22"},{"size":6986,"mtime":1654953007712,"results":"29","hashOfConfig":"22"},{"size":1110,"mtime":1654344911025,"results":"30","hashOfConfig":"22"},{"size":5176,"mtime":1654759253371,"results":"31","hashOfConfig":"22"},{"size":3063,"mtime":1654656731387,"results":"32","hashOfConfig":"22"},{"size":12203,"mtime":1654955779598,"results":"33","hashOfConfig":"22"},{"size":16600,"mtime":1654953096169,"results":"34","hashOfConfig":"22"},{"size":4081,"mtime":1654784067512,"results":"35","hashOfConfig":"22"},{"size":1304,"mtime":1654763362477,"results":"36","hashOfConfig":"22"},{"size":4039,"mtime":1654674062143,"results":"37","hashOfConfig":"22"},{"size":1071,"mtime":1654673968492,"results":"38","hashOfConfig":"22"},{"size":11386,"mtime":1654952957995,"results":"39","hashOfConfig":"22"},{"size":353,"mtime":1654312202533,"results":"40","hashOfConfig":"22"},{"size":11737,"mtime":1654956095977,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ap7pu9",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\detail\\[id].js",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\info\\index.js",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\info\\[id].js",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\pending\\index.js",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\search.js",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\type\\[type].js",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\api\\updatecache.js",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\detail\\[id].jsx",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\donate.jsx",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\index.jsx",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\login.jsx",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\search.jsx",["105"],[],"import dynamic from \"next/dynamic\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  MenuItem,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport Router from \"next/router\";\r\nimport { Container } from \"@mui/system\";\r\nimport style from \"./../styles/Search.module.scss\";\r\nimport CardItem from \"../components/CardItem/Card\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Head from \"next/head\";\r\nimport Hori1 from \"./../assets/images/hori.png\";\r\nconst Image = dynamic(() => import(\"next/image\"), {\r\n  ssr: false,\r\n});\r\nconst LetSearch = (props) => {\r\n  const router = useRouter();\r\n  const [searchParams, SerearchParams] = useState({\r\n    keyword: undefined,\r\n    type: undefined,\r\n    category: undefined,\r\n  });\r\n\r\n  const [selectType, setType] = useState();\r\n  const [searchText, setSearchText] = useState();\r\n  const [selectCategory, setCategory] = useState();\r\n  const [searchFor, setSearchFor] = useState();\r\n\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [dataInfo, setDataInfo] = useState([]);\r\n  const [loadingInfo, setLoadingInfo] = useState(true);\r\n  const [init, setInit] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (router.isReady) searchFirst();\r\n  }, [router.isReady]);\r\n\r\n  const searchFirst = async () => {\r\n    const URLSearch = new URLSearchParams(window.location.search);\r\n    let nowParams = {\r\n      keyword: URLSearch.get(\"keyword\"),\r\n      type: URLSearch.get(\"type\"),\r\n      category: URLSearch.get(\"category\"),\r\n    };\r\n    setType(nowParams.type);\r\n    setCategory(nowParams.category);\r\n    setSearchFor(nowParams.keyword);\r\n    setSearchText(nowParams.keyword);\r\n    SerearchParams(nowParams);\r\n\r\n    if (\r\n      nowParams.keyword == \"\" ||\r\n      nowParams.keyword == null ||\r\n      nowParams.keyword == undefined\r\n    )\r\n      // router.push(\"404\");\r\n      alert(nowParams.keyword);\r\n    else {\r\n      try {\r\n        const url =\r\n          `https://hcmute.netlify.app/api/search?keyword=` +\r\n          encodeURIComponent(nowParams.keyword) +\r\n          `&type=` +\r\n          encodeURIComponent(nowParams.type) +\r\n          `&category=` +\r\n          encodeURIComponent(nowParams.category);\r\n        const searchResulf = await axios.get(url);\r\n        setData(searchResulf.data);\r\n        if (searchResulf.data.length < 6) setHasMore(false);\r\n        let infoResult = [];\r\n        Promise.all(\r\n          searchResulf.data.slice(0, 6).map(async (e) => {\r\n            infoResult.push(\r\n              (await axios.get(window.location.origin + `/api/info/` + e.id))\r\n                .data\r\n            );\r\n          })\r\n        )\r\n          .then(() => {\r\n            setDataInfo(infoResult);\r\n            setLoadingInfo(false);\r\n          })\r\n          .catch(() => setLoadingInfo(false));\r\n      } catch (error) {\r\n        console.error(error);\r\n        setDataInfo([]);\r\n        setData([]);\r\n        setLoadingInfo(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!init) {\r\n      searching(searchText);\r\n    }\r\n    setInit(false);\r\n  }, [selectCategory, selectType]);\r\n\r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n  const handleChangeCategory = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  const searchHanlder = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      searching(event.target.value);\r\n    }\r\n  };\r\n\r\n  const searching = async (value) => {\r\n    if (value == \"\") alert(\"Nhập vào trống!\");\r\n    else\r\n      try {\r\n        setLoadingInfo(true);\r\n        Router.push(\r\n          {\r\n            pathname: \"/search\",\r\n            query: {\r\n              keyword: value,\r\n              type: selectType,\r\n              category: selectCategory,\r\n            },\r\n          },\r\n          undefined,\r\n          { shallow: true }\r\n        );\r\n        const searchResulf = await axios.get(\r\n          window.location.origin +\r\n            `/api/search?keyword=` +\r\n            encodeURIComponent(value) +\r\n            `&type=` +\r\n            encodeURIComponent(selectType) +\r\n            `&category=` +\r\n            encodeURIComponent(selectCategory)\r\n        );\r\n        if (searchResulf.length < 6) setHasMore(false);\r\n        else setHasMore(true);\r\n        setData(searchResulf.data);\r\n        let infoResult = [];\r\n        await Promise.all(\r\n          searchResulf.data.slice(0, 6).map(async (e) => {\r\n            infoResult.push(\r\n              (await axios.get(window.location.origin + `/api/info/` + e.id))\r\n                .data\r\n            );\r\n          })\r\n        );\r\n        setLoadingInfo(false);\r\n        setDataInfo(infoResult);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setDataInfo([]);\r\n        setData([]);\r\n        setLoadingInfo(false);\r\n      }\r\n    setSearchFor(value);\r\n  };\r\n\r\n  const fetchMoreData = async () => {\r\n    let nunber = 6;\r\n    console.log(\"FETCHHHHHH   \");\r\n    let infoResult = [];\r\n    await Promise.all(\r\n      data.slice(dataInfo.length, dataInfo.length + nunber).map(async (e) => {\r\n        infoResult.push(\r\n          (await axios.get(window.location.origin + `/api/info/` + e.id)).data\r\n        );\r\n      })\r\n    )\r\n      .then(() => {\r\n        console.log(\"MORELENGT: \" + infoResult.length);\r\n        setDataInfo((prev) => [...prev].concat(infoResult));\r\n        if (infoResult.length < 6) setHasMore(false);\r\n        return;\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"66px\" }} className={style.search}>\r\n      {/* <Head>\r\n        <title key=\"title\">Tìm tài liệu tại KhoTaiLieu </title>\r\n        <meta name=\"description\" content=\"Some Page Description\" />\r\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\r\n        <meta name=\"google\" content=\"notranslate\" />\r\n        <meta name=\"description\" content={\"Tìm kiếm tài liệu tại KhoTaiLieu\"} />\r\n        <meta\r\n          property=\"og:description\"\r\n          content={\"Tìm kiếm tài liệu tại KhoTaiLieu\"}\r\n        />\r\n      </Head> */}\r\n      <Box textAlign=\"center\">\r\n        <Typography\r\n          variant=\"h4\"\r\n          component=\"div\"\r\n          gutterBottom\r\n          alignItems=\"center\"\r\n          p={1}\r\n        >\r\n          Kết quả tìm kiếm cho <strong>{searchFor}</strong>\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Container\r\n        sx={{\r\n          opacity: 1,\r\n          padding: \"10px\",\r\n          borderRadius: \"10px\",\r\n        }}\r\n      >\r\n        <Grid container spacing={1}>\r\n          <Grid item sm={6} xs={12} textAlign=\"center\">\r\n            <TextField\r\n              label=\"Tìm tài liệu\"\r\n              variant=\"outlined\"\r\n              id=\"validation-outlined-input\"\r\n              color=\"primary\"\r\n              type=\"search\"\r\n              fullWidth\r\n              onKeyDown={(e) => searchHanlder(e)}\r\n              sx={{ backgroundColor: \"grey.light\" }}\r\n              value={searchText}\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item sm={3} xs={6}>\r\n            <TextField\r\n              sx={{ backgroundColor: \"grey.light\" }}\r\n              fullWidth\r\n              size=\"normal\"\r\n              id=\"outlined-select-currency-native\"\r\n              label=\"Loại\"\r\n              select\r\n              value={selectType}\r\n              onChange={handleChangeType}\r\n            >\r\n              <MenuItem value=\"all\">\r\n                <em>All </em>\r\n              </MenuItem>\r\n              <MenuItem value=\"docs\">Tài liệu</MenuItem>\r\n              <MenuItem value=\"project\">Đồ án</MenuItem>\r\n              <MenuItem value=\"exam\">Đề thi</MenuItem>\r\n              <MenuItem value=\"report\">Tiểu luận</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item sm={3} xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              size=\"normal\"\r\n              id=\"outlined-select-currency-native\"\r\n              label=\"Lĩnh vực\"\r\n              select\r\n              value={selectCategory}\r\n              onChange={handleChangeCategory}\r\n              sx={{ backgroundColor: \"grey.light\" }}\r\n            >\r\n              <MenuItem value=\"all\">\r\n                <em>All </em>\r\n              </MenuItem>\r\n              <MenuItem value=\"Công nghệ thông tin\">\r\n                Công nghệ thông tin\r\n              </MenuItem>\r\n              <MenuItem value=\"Cơ khí\">Cơ khí</MenuItem>\r\n              <MenuItem value=\"Điện - Điện tử\">Điện - Điện tử</MenuItem>\r\n              <MenuItem value=\"In và Truyền thông\">In và Truyền thông</MenuItem>\r\n              <MenuItem value=\"Kinh tế\">Kinh tế</MenuItem>\r\n              <MenuItem value=\"Khoa học ứng dụng\">Khoa học ứng dụng</MenuItem>\r\n              <MenuItem value=\"Lý luận Chính trị\">Lý luận Chính trị</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"xl\" disableGutters sx={{ p: 1 }}>\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            xs={2}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              display: { xs: \"none\", md: \"block\" },\r\n            }}\r\n          >\r\n            <Image\r\n              alt=\"Vercel logo\"\r\n              src={Hori1}\r\n              sx={{ maxWidth: \"100%\", height: \"auto\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Box sx={{ width: \"100%\" }}>\r\n              <Stack spacing={2}>\r\n                {loadingInfo ? (\r\n                  <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <CircularProgress />\r\n                  </Box>\r\n                ) : dataInfo.length > 0 ? (\r\n                  <>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      gutterBottom={false}\r\n                      component=\"div\"\r\n                      textAlign=\"center\"\r\n                      backgroundColor=\"primary\"\r\n                    >\r\n                      Tìm thấy {data.length} kết quả\r\n                    </Typography>\r\n                    <InfiniteScroll\r\n                      dataLength={dataInfo.length} //This is important field to render the next data\r\n                      next={fetchMoreData}\r\n                      hasMore={hasMore}\r\n                      loader={\r\n                        <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                          <CircularProgress />\r\n                        </Box>\r\n                      }\r\n                      endMessage={\r\n                        <p style={{ textAlign: \"center\" }}>\r\n                          <b>Yay! You have seen it all</b>\r\n                        </p>\r\n                      }\r\n                    >\r\n                      {dataInfo.map((e, i) => (\r\n                        <CardItem item={e} key={i} />\r\n                      ))}\r\n                    </InfiniteScroll>\r\n                  </>\r\n                ) : (\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    gutterBottom\r\n                    component=\"div\"\r\n                    textAlign=\"center\"\r\n                    backgroundColor=\"primary\"\r\n                  >\r\n                    Không tìm thấy\r\n                  </Typography>\r\n                )}\r\n              </Stack>\r\n            </Box>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={2}\r\n            alignItems=\"center\"\r\n            sx={{\r\n              display: { xs: \"none\", md: \"block\" },\r\n            }}\r\n          >\r\n            <Image\r\n              alt=\"Vercel logo\"\r\n              src={Hori1}\r\n              sx={{\r\n                maxWidth: \"100%\",\r\n                height: \"auto\",\r\n              }}\r\n              style={{ transform: \"scaleX(-1)\" }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default LetSearch;\r\n","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\share.jsx",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\type\\[type].jsx",["106"],[],"import {\r\n  Box,\r\n  Container,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport Link from \"next/link\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Router from \"next/router\";\r\nimport { alpha } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nexport default function TypePage(props) {\r\n  const [data, setData] = useState(props.searchResulf);\r\n  const [filtered, setFiltered] = useState({\r\n    all: [],\r\n    sci: [],\r\n    theo: [],\r\n    elec: [],\r\n    mech: [],\r\n    it: [],\r\n    eco: [],\r\n    print: [],\r\n  });\r\n  useEffect(() => {\r\n    if (data == null) {\r\n      alert(\"Đã xảy ra lỗi\");\r\n      Router.push(\"/\");\r\n    } else {\r\n      let all0 = [],\r\n        sci0 = [],\r\n        theo0 = [],\r\n        elec0 = [],\r\n        mech0 = [],\r\n        it0 = [],\r\n        eco0 = [],\r\n        print0 = [];\r\n\r\n      data.forEach((element) => {\r\n        switch (element.major) {\r\n          case \"Khoa học ứng dụng\": {\r\n            sci0.push(element);\r\n            break;\r\n          }\r\n          case \"Lý luận Chính trị\": {\r\n            theo0.push(element);\r\n            break;\r\n          }\r\n          case \"Điện - Điện tử\": {\r\n            elec0.push(element);\r\n            break;\r\n          }\r\n          case \"Cơ khí\": {\r\n            mech0.push(element);\r\n            break;\r\n          }\r\n          case \"Công nghệ thông tin\": {\r\n            it0.push(element);\r\n            break;\r\n          }\r\n          case \"Kinh tế\": {\r\n            eco0.push(element);\r\n            break;\r\n          }\r\n          case \"In và Truyền thông\": {\r\n            print0.push(element);\r\n            break;\r\n          }\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container sx={{ paddingTop: \"65px\" }}>\r\n      <Box\r\n        display=\"grid\"\r\n        gridTemplateColumns=\"repeat(12, 1fr)\"\r\n        gap={2}\r\n        textAlign=\"center\"\r\n      >\r\n        <Box textAlign=\"center\" gridColumn=\"span 12\">\r\n          <Typography\r\n            variant=\"h4\"\r\n            component=\"div\"\r\n            gutterBottom\r\n            alignItems=\"center\"\r\n            p={1}\r\n          >\r\n            TOP TÀI LIỆU\r\n          </Typography>\r\n        </Box>\r\n        <Box gridColumn=\"span 6\">\r\n          <Box sx={{ backgroundColor: \"grey.main\" }}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              gutterBottom\r\n              alignItems=\"center\"\r\n              p={1}\r\n            >\r\n              Tất cả\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box gridColumn=\"span 6\">\r\n          <Box sx={{ backgroundColor: \"grey.main\" }}>Khoa học ứng dụng</Box>\r\n        </Box>\r\n        <Box gridColumn=\"span 6\">\r\n          <Box sx={{ backgroundColor: \"grey.main\" }}> Lý luận Chính trị</Box>\r\n        </Box>\r\n        <Box gridColumn=\"span 6\">\r\n          <Box sx={{ backgroundColor: \"grey.main\" }}>Điện - Điện tử</Box>\r\n        </Box>\r\n        <Box gridColumn=\"span 6\">\r\n          <Box sx={{ backgroundColor: \"grey.main\" }}>Cơ khí</Box>\r\n        </Box>{\" \"}\r\n        <Box gridColumn=\"span 6\">\r\n          <Box sx={{ backgroundColor: \"grey.main\" }}> Công nghệ thông tin</Box>\r\n        </Box>{\" \"}\r\n        <Box gridColumn=\"span 6\">\r\n          <Box sx={{ backgroundColor: \"grey.main\" }}>Kinh tế</Box>\r\n        </Box>{\" \"}\r\n        <Box gridColumn=\"span 6\">\r\n          <Box sx={{ backgroundColor: \"grey.main\" }}>In và Truyền thông</Box>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const a = context.query;\r\n  try {\r\n    const searchResulf = await axios.get(\r\n      `https://hcmute.netlify.app/api/type/` + a.type\r\n    );\r\n    return {\r\n      props: {\r\n        searchResulf: searchResulf.data,\r\n      },\r\n    };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return {\r\n      props: {\r\n        searchResulf: null,\r\n      },\r\n    };\r\n  }\r\n}\r\n","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\_app.js",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\components\\CardItem\\Card.jsx",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\components\\Chip\\Chip.jsx",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\components\\Header\\Header.jsx",["107"],[],"import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n  Divider,\r\n  Avatar,\r\n  Drawer,\r\n} from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport AutoStoriesSharpIcon from \"@mui/icons-material/AutoStoriesSharp\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\n\r\nimport ArticleIcon from \"@mui/icons-material/Article\";\r\nimport QuizIcon from \"@mui/icons-material/Quiz\";\r\nimport AccountTreeIcon from \"@mui/icons-material/AccountTree\";\r\nimport StickyNote2Icon from \"@mui/icons-material/StickyNote2\";\r\nimport PaidIcon from \"@mui/icons-material/Paid\";\r\nimport { signOut } from \"firebase/auth\";\r\nimport { auth } from \"../../services/firebase\";\r\nimport \"../../services/firebase\";\r\nimport Link from \"next/link\";\r\nimport Router from \"next/router\";\r\nimport ExitToAppOutlinedIcon from \"@mui/icons-material/ExitToAppOutlined\";\r\nimport HourglassBottomIcon from \"@mui/icons-material/HourglassBottom\";\r\nimport MenuSharpIcon from \"@mui/icons-material/MenuSharp\";\r\nimport ShareIcon from \"@mui/icons-material/Share\";\r\n\r\nconst pages = [\"Tài liệu\", \"Đề thi\", \"Đồ án\", \"Tiểu luận\", \"Donate\"];\r\nexport default function Header(props) {\r\n  const [anchorElNav, setAnchorElNav] = useState(null);\r\n  const [anchorElUser, setAnchorElUser] = useState(null);\r\n  const [drawer, setDrawer] = React.useState(false);\r\n  const [user, setUser] = React.useState(undefined);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((currentUser) => {\r\n      console.log(currentUser);\r\n      setUser(currentUser);\r\n    });\r\n  }, [auth]);\r\n\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleOpenNavMenu = () => {\r\n    setAnchorElNav(true);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setDrawer(open);\r\n  };\r\n\r\n  const Logout = () => {\r\n    signOut(auth)\r\n      .then(() => {\r\n        alert(\"OUT\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"EOROROrr\");\r\n      });\r\n  };\r\n  const appbarItemClick = (index) => {\r\n    index == 0\r\n      ? Router.push(\"/type/docs\")\r\n      : index == 1\r\n      ? Router.push(\"/type/exam\")\r\n      : index == 2\r\n      ? Router.push(\"/type/project\")\r\n      : index == 3\r\n      ? Router.push(\"/type/report\")\r\n      : Router.push(\"/donate\");\r\n  };\r\n  const list = () => (\r\n    <Box\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n      disablePadding\r\n    >\r\n      <List>\r\n        {/* {pages.map((text, index) => (\r\n          <ListItem key={text} disablePadding>\r\n            <ListItemButton onClick={() => appbarItemClick(index)}>\r\n              <ListItemIcon>\r\n                {index == 0 ? (\r\n                  <StickyNote2Icon />\r\n                ) : index == 1 ? (    \r\n                  <QuizIcon />\r\n                ) : index == 2 ? (\r\n                  <AccountTreeIcon />\r\n                ) : index == 3 ? (\r\n                  <ArticleIcon />\r\n                ) : (\r\n                  <PaidIcon />\r\n                )}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))} */}\r\n        <ListItem key={\"4e423\"} disablePadding>\r\n          <ListItemButton onClick={() => Router.push(\"/share\")}>\r\n            <ListItemIcon>\r\n              <ShareIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Chia sẻ tài liệu\"} />\r\n          </ListItemButton>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" sx={{ width: \"100%\" }}>\r\n      <Container maxWidth={false}>\r\n        <Toolbar disableGutters>\r\n          <AutoStoriesSharpIcon\r\n            sx={{ display: { xs: \"none\", md: \"flex\" }, mr: 1 }}\r\n          />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            sx={{\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              flexGrow: 0,\r\n            }}\r\n          >\r\n            <Link href=\"/\">\r\n                <Typography\r\n                  sx={{\r\n                    color: \"grey.light\",\r\n                  }}\r\n                  id=\"logo-text\"\r\n                >\r\n                  KhoTaiLieu\r\n                </Typography>\r\n            </Link>\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              flexGrow: 1,\r\n              display: { xs: \"none\", md: \"flex\" },\r\n            }}\r\n          >\r\n            {/* {pages.map((page, i) => (\r\n                <Button\r\n                  key={page}\r\n                  onClick={() => {\r\n                    appbarItemClick(i);\r\n                  }}\r\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\r\n                >\r\n                  {page}\r\n                </Button>\r\n              ))} */}\r\n\r\n            {/* <Button\r\n              key={\"xvxc\"}\r\n              onClick={() => {\r\n                Router.push(\"/share\");\r\n              }}\r\n              sx={{\r\n                my: 2,\r\n                color: \"white\",\r\n                display: \"block\",\r\n                textTransform: \"inherit\",\r\n                marginLeft: \"10px\",\r\n              }}\r\n            >\r\n              Chia sẻ tài liệu\r\n            </Button> */}\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              sx={{\r\n                marginLeft: \"20px\",\r\n              }}\r\n            >\r\n              <Link href=\"/share\">\r\n                  <Typography\r\n                    sx={{\r\n                      my: 2,\r\n                      color: \"white\",\r\n                      display: \"block\",\r\n                      textTransform: \"inherit\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    Chia sẻ tài liệu\r\n                  </Typography>\r\n              </Link>\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{ flexGrow: 0, display: { xs: \"none\", md: \"flex\" } }}>\r\n            {user === undefined ? (\r\n              <HourglassBottomIcon />\r\n            ) : user === null ? (\r\n              <Typography\r\n                textAlign=\"center\"\r\n                sx={{\r\n                  my: 2,\r\n                  color: \"white\",\r\n                  display: \"block\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() =>\r\n                  Router.push({\r\n                    pathname: \"/login\",\r\n                  })\r\n                }\r\n              >\r\n                Login\r\n              </Typography>\r\n            ) : (\r\n              <IconButton\r\n                onClick={() => handleOpenUserMenu(true)}\r\n                sx={{ p: 0 }}\r\n              >\r\n                <Avatar alt={user.displayName} src={user.photoURL} />\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n\r\n          {/* MOBLIE */}\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar2\"\r\n              aria-haspopup=\"true\"\r\n              onClick={toggleDrawer(true)}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuSharpIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar2\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: \"block\", md: \"none\" },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n\r\n          <AutoStoriesSharpIcon\r\n            sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }}\r\n          />\r\n\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            sx={{\r\n              display: { xs: \"flex\", md: \"none\" },\r\n              flexGrow: 1,\r\n            }}\r\n          >\r\n            <Link href=\"/\">\r\n                <Typography\r\n                  sx={{\r\n                    color: \"grey.light\",\r\n                  }}\r\n                  id=\"logo-text\"\r\n                >\r\n                  KhoTaiLieu\r\n                </Typography>\r\n            </Link>\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 0, display: { xs: \"flex\", md: \"none\" } }}>\r\n            {user === undefined ? (\r\n              <HourglassBottomIcon />\r\n            ) : user === null ? (\r\n              <Typography\r\n                textAlign=\"center\"\r\n                sx={{\r\n                  my: 2,\r\n                  color: \"white\",\r\n                  display: \"block\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() =>\r\n                  Router.push({\r\n                    pathname: \"/login\",\r\n                  })\r\n                }\r\n              >\r\n                Login\r\n              </Typography>\r\n            ) : (\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt={user.displayName} src={user.photoURL} />\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n\r\n          {user && (\r\n            <Menu\r\n              sx={{ mt: \"45px\", rigth: \"50px\" }}\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              <MenuItem>\r\n                <Typography textAlign=\"center\">{user.displayName}</Typography>\r\n              </MenuItem>\r\n              <Link href=\"/share\">\r\n                  <MenuItem>\r\n                    <Typography\r\n                      textAlign=\"center\"\r\n                      sx={{\r\n                        color: \"grey.dark\",\r\n                      }}\r\n                    >\r\n                      Chia sẻ tài liệu\r\n                    </Typography>\r\n                  </MenuItem>\r\n              </Link>\r\n              <MenuItem onClick={() => Logout()}>\r\n                <Typography textAlign=\"center\">Logout</Typography>\r\n              </MenuItem>\r\n            </Menu>\r\n          )}\r\n        </Toolbar>\r\n      </Container>\r\n      <Drawer open={drawer} variant=\"temporary\" onClose={toggleDrawer(false)}>\r\n        {list()}\r\n      </Drawer>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\lib\\cors.js",[],[],"C:\\Users\\pffdo\\Desktop\\Learn_FE\\hcmute\\sharetailieu2\\pages\\test.jsx",["108","109"],[],{"ruleId":"110","severity":1,"message":"111","line":107,"column":6,"nodeType":"112","endLine":107,"endColumn":34,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":80,"column":6,"nodeType":"112","endLine":80,"endColumn":8,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"116","line":51,"column":6,"nodeType":"112","endLine":51,"endColumn":12,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"118","line":53,"column":6,"nodeType":"112","endLine":53,"endColumn":8,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"111","line":60,"column":6,"nodeType":"112","endLine":60,"endColumn":34,"suggestions":"120"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'init', 'searchText', and 'searching'. Either include them or remove the dependency array.","ArrayExpression",["121"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["122"],"React Hook useEffect has an unnecessary dependency: 'auth'. Either exclude it or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.",["123"],"React Hook useEffect has a missing dependency: 'props.searchResulf'. Either include it or remove the dependency array. If 'setData' needs the current value of 'props.searchResulf', you can also switch to useReducer instead of useState and read 'props.searchResulf' in the reducer.",["124"],["125"],{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"126","fix":"134"},"Update the dependencies array to be: [init, searchText, searching, selectCategory, selectType]",{"range":"135","text":"136"},"Update the dependencies array to be: [data]",{"range":"137","text":"138"},"Update the dependencies array to be: []",{"range":"139","text":"140"},"Update the dependencies array to be: [props.searchResulf]",{"range":"141","text":"142"},{"range":"143","text":"136"},[3238,3266],"[init, searchText, searching, selectCategory, selectType]",[1794,1796],"[data]",[1706,1712],"[]",[1806,1808],"[props.searchResulf]",[1916,1944]]